name: publish-all-nuget-packages

on:
  workflow_dispatch:

jobs:
  publish-nuget:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - BlueTeam-Tools
          - Core-ScriptLibrary
          - ITSM-Templates-SVR
          - ITSM-Templates-WKS
          - SysAdmin-Tools

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive  # Ensure submodules are fully initialized

      - name: 📦 Install mono to run nuget.exe
        run: sudo apt-get update && sudo apt-get install -y mono-complete

      - name: 📦 Download latest nuget.exe
        run: |
          mkdir -p .github/tools
          wget -O .github/tools/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe

      - name: 📁 Create directories
        run: |
          mkdir -p ReadmeCopies
          mkdir -p nupkg-out
          mkdir -p temp-${{ matrix.package }}

      - name: 🧪 Debug - Verify submodules
        run: |
          echo "Submodule status:"
          git submodule status
          git submodule update --init --recursive

      - name: 🧪 Debug - Validate package directory and files
        run: |
          echo "Validating ${{ matrix.package }} directory:"
          if [ -d "${{ matrix.package }}" ]; then
            echo "✅ Directory ${{ matrix.package }} exists"
            ls -lh "${{ matrix.package }}/"
          else
            echo "❌ Directory ${{ matrix.package }} not found"
            exit 1
          fi
          if [ -f "${{ matrix.package }}/README.md" ]; then
            echo "✅ Found ${{ matrix.package }}/README.md"
            cat "${{ matrix.package }}/README.md"  # Display contents
          else
            echo "❌ README file not found at ${{ matrix.package }}/README.md"
            exit 1
          fi
          if [ -f "${{ matrix.package }}.nuspec" ]; then
            echo "✅ Found ${{ matrix.package }}.nuspec"
            cat "${{ matrix.package }}.nuspec"  # Display contents
          else
            echo "❌ .nuspec file not found at ${{ matrix.package }}.nuspec"
            exit 1
          fi

      - name: 🧪 Debug - Check for README variants
        run: |
          echo "Looking for README variants in ${{ matrix.package }}:"
          find "${{ matrix.package }}" -iname "*readme*"

      - name: 📄 Stage package files
        run: |
          # Copy package directory to temporary staging area
          cp -r "${{ matrix.package }}"/* "temp-${{ matrix.package }}/"
          # Copy .nuspec file to temporary directory
          cp "${{ matrix.package }}.nuspec" "temp-${{ matrix.package }}/${{ matrix.package }}.nuspec"
          # Copy README.md to ReadmeCopies
          cp "${{ matrix.package }}/README.md" "ReadmeCopies/${{ matrix.package }}-README.md"
          echo "✅ Staged files for ${{ matrix.package }}:"
          ls -lh "temp-${{ matrix.package }}/"
          echo "✅ Copied README to ReadmeCopies/${{ matrix.package }}-README.md"

      - name: 🧪 Debug - Verify staged files
        run: |
          echo "Contents of temp-${{ matrix.package }}:"
          ls -lh "temp-${{ matrix.package }}/"
          echo "Contents of ReadmeCopies:"
          find ReadmeCopies -type f -exec ls -lh {} \;
          if [ -f "ReadmeCopies/${{ matrix.package }}-README.md" ]; then
            echo "✅ README file exists at ReadmeCopies/${{ matrix.package }}-README.md"
            cat "ReadmeCopies/${{ matrix.package }}-README.md"  # Display contents
          else
            echo "❌ README file not found at ReadmeCopies/${{ matrix.package }}-README.md"
            exit 1
          fi
          if [ -f "temp-${{ matrix.package }}/${{ matrix.package }}.nuspec" ]; then
            echo "✅ .nuspec file exists at temp-${{ matrix.package }}/${{ matrix.package }}.nuspec"
          else
            echo "❌ .nuspec file not found at temp-${{ matrix.package }}/${{ matrix.package }}.nuspec"
            exit 1
          fi

      - name: 📦 Pack NuGet package
        run: |
          cd "temp-${{ matrix.package }}"
          properties="SymbolPackageFormat=snupkg"
          mono ../../.github/tools/nuget.exe pack "${{ matrix.package }}.nuspec" \
            -OutputDirectory ../../nupkg-out \
            -Properties "$properties"
          cd ../..

      - name: 🧪 Debug - Verify NuGet package output
        run: |
          echo "Contents of nupkg-out:"
          ls -lh nupkg-out/
          if [ -n "$(find nupkg-out -name '*.nupkg')" ]; then
            echo "✅ NuGet package created"
          else
            echo "❌ No NuGet package created"
            exit 1
          fi

      - name: 🚀 Push to nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          pkg_path=$(find nupkg-out -name '*.nupkg' | head -n 1)
          if [ -z "$pkg_path" ]; then
            echo "❌ No .nupkg file found to publish."
            exit 1
          fi
          echo "📦 Found package: $pkg_path"
          mono .github/tools/nuget.exe push "$pkg_path" \
            -Source https://api.nuget.org/v3/index.json \
            -ApiKey "$NUGET_API_KEY" \
            -NonInteractive

      - name: 🏷️ Create Git tag for version
        run: |
          version=$(basename "$(find nupkg-out -name '*.nupkg' | head -n 1)" | sed -E 's/^.+\.([0-9]+\.[0-9]+\.[0-9]+)\.nupkg$/\1/')
          tag="${{ matrix.package }}-v$version"
          echo "Creating tag $tag"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "$tag"
          git push origin "$tag"

      - name: 🧹 Clean up temporary directory
        run: |
          rm -rf "temp-${{ matrix.package }}"
