name: publish-all-nuget-packages

on:
  workflow_dispatch:

jobs:
  publish-nuget:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - BlueTeam-Tools
          - Core-ScriptLibrary
          - ITSM-Templates-SVR
          - ITSM-Templates-WKS
          - SysAdmin-Tools

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: 🛠️ Install mono for nuget.exe
        run: sudo apt-get update && sudo apt-get install -y mono-complete

      - name: 📁 Ensure folders exist
        run: |
          mkdir -p ReadmeCopies
          mkdir -p nupkg-out

      - name: 📄 Copy README for package metadata
        run: |
          if [ -f "${{ matrix.package }}/README.md" ]; then
            cp "${{ matrix.package }}/README.md" "ReadmeCopies/${{ matrix.package }}-README.md"
          else
            echo "❌ README.md not found in ${{ matrix.package }}/"
            exit 1
          fi

      - name: 📦 Pack NuGet package using nuget.exe
        run: |
          mono .github/tools/nuget.exe pack "${{ matrix.package }}.nuspec" \
            -OutputDirectory nupkg-out \
            -Properties "ReadMeFile=ReadmeCopies/${{ matrix.package }}-README.md;SymbolPackageFormat=snupkg"

      - name: 🚀 Push .nupkg to NuGet.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          pkg_path=$(find nupkg-out -name "${{ matrix.package }}*.nupkg" | head -n 1)
          if [ -z "$pkg_path" ]; then
            echo "❌ No .nupkg file found to publish for ${{ matrix.package }}"
            exit 1
          fi
          echo "📦 Found package: $pkg_path"
          mono .github/tools/nuget.exe push "$pkg_path" \
            -Source https://api.nuget.org/v3/index.json \
            -ApiKey "$NUGET_API_KEY" \
            -NonInteractive

      - name: 🏷️ Create Git Tag for published version
        run: |
          VERSION="v1.0.0-${{ matrix.package }}"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "$VERSION"
          git push origin "$VERSION"
