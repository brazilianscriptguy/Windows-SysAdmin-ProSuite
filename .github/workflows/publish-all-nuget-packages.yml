name: publish-all-nuget-packages

on:
  workflow_dispatch:

jobs:
  publish-nuget:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - BlueTeam-Tools
          - Core-ScriptLibrary
          - ITSM-Templates-SVR
          - ITSM-Templates-WKS
          - SysAdmin-Tools

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: 📦 Install mono
        run: |
          sudo apt-get update
          sudo apt-get install -y mono-complete

      - name: 📥 Download nuget.exe
        run: |
          mkdir -p .github/tools
          wget -O .github/tools/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
          chmod +x .github/tools/nuget.exe

      - name: 📁 Create required directories
        run: |
          mkdir -p ReadmeCopies
          mkdir -p nupkg-out
          mkdir -p "temp-${{ matrix.package }}"

      - name: 🧪 Validate README and .nuspec
        run: |
          echo "🔎 Verifying files for ${{ matrix.package }}"

          # Validate README.md presence
          if [ ! -f "${{ matrix.package }}/README.md" ]; then
            echo "❌ README.md not found in ./${{ matrix.package }}/"
            exit 1
          fi

          # Validate .nuspec presence
          if [ ! -f "${{ matrix.package }}.nuspec" ]; then
            echo "❌ .nuspec file not found: ./${{ matrix.package }}.nuspec"
            exit 1
          fi

          # Copy README and nuspec
          cp "${{ matrix.package }}/README.md" "ReadmeCopies/${{ matrix.package }}-README.md"
          cp "${{ matrix.package }}.nuspec" "temp-${{ matrix.package }}/${{ matrix.package }}.nuspec"

      - name: 📄 Stage files for packing
        run: |
          cp -r "${{ matrix.package }}"/* "temp-${{ matrix.package }}/"
          echo "✅ Staged contents:"
          ls -lh "temp-${{ matrix.package }}/"

      - name: 📦 Pack NuGet Package
        run: |
          cd "temp-${{ matrix.package }}"
          mono ../../.github/tools/nuget.exe pack "${{ matrix.package }}.nuspec" \
            -OutputDirectory ../../nupkg-out \
            -Properties "ReadMeFile=ReadmeCopies/${{ matrix.package }}-README.md;SymbolPackageFormat=snupkg"
          cd ../..

      - name: 🚀 Push to nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          pkg_path=$(find nupkg-out -name "${{ matrix.package }}.*.nupkg" | head -n 1)
          if [ -z "$pkg_path" ]; then
            echo "❌ No NuGet package found for ${{ matrix.package }}"
            exit 1
          fi
          echo "📦 Found: $pkg_path"
          mono .github/tools/nuget.exe push "$pkg_path" \
            -Source https://api.nuget.org/v3/index.json \
            -ApiKey "$NUGET_API_KEY" \
            -NonInteractive

      - name: 🏷️ Git tag release
        run: |
          version=$(basename "$(find nupkg-out -name '${{ matrix.package }}.*.nupkg' | head -n 1)" | sed -E 's/.*\.([0-9]+\.[0-9]+\.[0-9]+)\.nupkg/\1/')
          tag="${{ matrix.package }}-v$version"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "$tag"
          git push origin "$tag"
          echo "🏷️ Created tag: $tag"

      - name: 🧹 Cleanup
        run: |
          rm -rf "temp-${{ matrix.package }}"
