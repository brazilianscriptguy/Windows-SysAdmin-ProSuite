name: publish-all-nuget-packages

on:
  workflow_dispatch:

jobs:
  publish-nuget:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - BlueTeam-Tools
          - Core-ScriptLibrary
          - ITSM-Templates-SVR
          - ITSM-Templates-WKS
          - SysAdmin-Tools

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: 🛠️ Install mono
        run: |
          sudo apt-get update
          sudo apt-get install -y mono-complete

      - name: 📥 Download nuget.exe
        run: |
          mkdir -p .github/tools
          echo "🔽 Downloading nuget.exe..."
          wget --fail --show-progress -O .github/tools/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
          if [ ! -s .github/tools/nuget.exe ]; then
            echo "❌ nuget.exe download failed or file is empty."
            exit 1
          fi
          echo "✅ nuget.exe downloaded:"
          ls -lh .github/tools/nuget.exe

      - name: 📁 Prepare folders
        run: |
          mkdir -p ReadmeCopies
          mkdir -p nupkg-out
          mkdir -p "temp-${{ matrix.package }}"

      - name: 📄 Stage .nuspec and README
        run: |
          pkg="${{ matrix.package }}"

          # Validate .nuspec
          if [ -f "$pkg.nuspec" ]; then
            cp "$pkg.nuspec" "temp-$pkg/$pkg.nuspec"
          else
            echo "❌ $pkg.nuspec not found!"
            exit 1
          fi

          # Validate README
          if [ -f "$pkg/README.md" ]; then
            cp "$pkg/README.md" "ReadmeCopies/$pkg-README.md"
          else
            echo "❌ README.md not found in $pkg"
            exit 1
          fi

          # Copy all package content
          if [ -d "$pkg" ]; then
            cp -r "$pkg"/* "temp-$pkg/"
          else
            echo "❌ Folder $pkg does not exist"
            exit 1
          fi

      - name: 📦 Pack NuGet package
        run: |
          cd "temp-${{ matrix.package }}"
          mono ../.github/tools/nuget.exe pack "${{ matrix.package }}.nuspec" \
            -OutputDirectory ../nupkg-out \
            -Properties "ReadMeFile=ReadmeCopies/${{ matrix.package }}-README.md;SymbolPackageFormat=snupkg"
          cd ..

      - name: 🧪 Verify NuGet package output
        run: |
          echo "📦 nupkg-out content:"
          ls -lh nupkg-out/
          if [ -z "$(find nupkg-out -name '*.nupkg')" ]; then
            echo "❌ No .nupkg file generated"
            exit 1
          fi

      - name: 🚀 Push to nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          pkg_path=$(find nupkg-out -name '*.nupkg' | head -n 1)
          echo "📦 Publishing: $pkg_path"
          mono .github/tools/nuget.exe push "$pkg_path" \
            -Source https://api.nuget.org/v3/index.json \
            -ApiKey "$NUGET_API_KEY" \
            -NonInteractive

      - name: 🏷️ Tag git release
        run: |
          version=$(basename "$(find nupkg-out -name '*.nupkg' | head -n 1)" | sed -E 's/.*\.([0-9]+\.[0-9]+\.[0-9]+)\.nupkg/\1/')
          tag="${{ matrix.package }}-v$version"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "$tag"
          git push origin "$tag"

      - name: 🧹 Clean up
        run: |
          rm -rf "temp-${{ matrix.package }}"
          echo "✅ Cleaned up temp folder"
