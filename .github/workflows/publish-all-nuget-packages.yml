name: publish-all-nuget-packages

on:
  workflow_dispatch:

jobs:
  publish-nuget:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - BlueTeam-Tools
          - Core-ScriptLibrary
          - ITSM-Templates-SVR
          - ITSM-Templates-WKS
          - SysAdmin-Tools

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: üõ†Ô∏è Install mono
        run: |
          sudo apt-get update
          sudo apt-get install -y mono-complete

      - name: üìÅ Prepare folders and stage files
        run: |
          pkg="${{ matrix.package }}"
          mkdir -p "ReadmeCopies"
          mkdir -p "nupkg-out"
          mkdir -p "temp-$pkg"

          if [ ! -d "$pkg" ]; then
            echo "‚ùå Folder $pkg not found"
            exit 1
          fi
          if [ ! -f "$pkg/README.md" ]; then
            echo "‚ùå README.md missing in $pkg"
            exit 1
          fi
          if [ ! -f "$pkg.nuspec" ]; then
            echo "‚ùå $pkg.nuspec not found"
            exit 1
          fi

          cp "$pkg.nuspec" "temp-$pkg/$pkg.nuspec"
          cp "$pkg/README.md" "ReadmeCopies/$pkg-README.md"
          cp -r "$pkg/"* "temp-$pkg/"

      - name: üì¶ Pack NuGet package
        run: |
          pkg="${{ matrix.package }}"
          cd "temp-$pkg"
          mono ../.github/tools/nuget.exe pack "$pkg.nuspec" \
            -OutputDirectory ../nupkg-out \
            -Properties "ReadMeFile=ReadmeCopies/$pkg-README.md;SymbolPackageFormat=snupkg"
          cd ..

      - name: üß™ Verify NuGet output
        run: |
          ls -lh nupkg-out/
          find nupkg-out -type f \( -name '*.nupkg' -o -name '*.snupkg' \)

      - name: üìù Extract version and changelog
        id: version
        run: |
          nupkg_path=$(find nupkg-out -name '*.nupkg' | head -n 1)
          version=$(basename "$nupkg_path" | sed -E 's/.*\.([0-9]+\.[0-9]+\.[0-9]+)\.nupkg/\1/')
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "üìå Detected version: $version"
          
          # Extract changelog entry
          echo "üîç Extracting changelog entry..."
          awk -v ver="$version" '
            $0 ~ "^## \\["ver"\\]" {flag=1; next}
            /^## \[/ {flag=0}
            flag {print}
          ' CHANGELOG.md > extracted-changelog.txt
          
          echo "CHANGELOG ENTRY:"
          cat extracted-changelog.txt
          echo "changelog<<EOF" >> "$GITHUB_OUTPUT"
          cat extracted-changelog.txt >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: üöÄ Push to GitHub Packages (NuGet feed)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in $(find nupkg-out -type f \( -name '*.nupkg' -o -name '*.snupkg' \)); do
            echo "üì¶ Publishing: $file"
            mono .github/tools/nuget.exe push "$file" \
              -Source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
              -ApiKey "${{ secrets.GITHUB_TOKEN }}" \
              -NonInteractive
          done

      - name: üè∑Ô∏è Create Git tag and release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ matrix.package }}-v${{ steps.version.outputs.version }}
          name: ${{ matrix.package }} v${{ steps.version.outputs.version }}
          body: ${{ steps.version.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            nupkg-out/*.nupkg
            nupkg-out/*.snupkg

      - name: üßπ Clean up
        run: rm -rf "temp-${{ matrix.package }}"
