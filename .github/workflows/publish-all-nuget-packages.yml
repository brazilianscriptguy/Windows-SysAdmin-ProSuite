name: publish-nuget-package

on:
  workflow_dispatch:

jobs:
  publish-nuget-packages:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - BlueTeam-Tools
          - Core-ScriptLibrary
          - ITSM-Templates-SVR
          - ITSM-Templates-WKS
          - SysAdmin-Tools

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
          persist-credentials: true

      - name: 🛠 Install mono to run nuget.exe
        run: sudo apt-get update && sudo apt-get install -y mono-complete

      - name: 📁 Prepare .nupkg output folder
        run: mkdir -p nupkg-out

      - name: 📎 Copy repository README.md to ReadmeCopies
        run: |
          mkdir -p NuGetPackageContent/ReadmeCopies
          cp "${{ matrix.package }}/README.md" "NuGetPackageContent/ReadmeCopies/${{ matrix.package }}-README.md"

      - name: 🧰 Pack NuGet package for ${{ matrix.package }}
        run: |
          mono .github/tools/nuget.exe pack "${{ matrix.package }}.nuspec" \
            -OutputDirectory nupkg-out \
            -Properties "ReadMeFile=${{ matrix.package }}-README.md;SymbolPackageFormat=snupkg"

      - name: 🚀 Push ${{ matrix.package }} to nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          pkg_path=$(find nupkg-out -name "${{ matrix.package }}*.nupkg" | head -n 1)
          if [ -z "$pkg_path" ]; then
            echo "❌ No .nupkg file found for ${{ matrix.package }}."
            exit 1
          fi
          mono .github/tools/nuget.exe push "$pkg_path" \
            -Source https://api.nuget.org/v3/index.json \
            -ApiKey "$NUGET_API_KEY" \
            -NonInteractive

      - name: 🏷️ Tag release in Git (if not tagged)
        run: |
          version=$(grep -oPm1 "(?<=<version>)[^<]+" "${{ matrix.package }}.nuspec")
          tag="nuget/${{ matrix.package }}-v$version"
          if git rev-parse "$tag" >/dev/null 2>&1; then
            echo "✅ Tag $tag already exists"
          else
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag "$tag"
            git push origin "$tag"
          fi

      - name: 📦 Mark ${{ matrix.package }} as 'Listed' (via NuGet API)
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          version=$(grep -oPm1 "(?<=<version>)[^<]+" "${{ matrix.package }}.nuspec")
          curl -X POST \
            -H "X-NuGet-ApiKey: $NUGET_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"listed\":true}" \
            "https://api.nuget.org/v3/package/${{ matrix.package }}/$version"
