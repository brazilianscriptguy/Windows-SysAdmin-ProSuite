name: release-and-publish

on:
  push:
    branches:
      - main

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.vars.outputs.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get short SHA and date
        id: vars
        run: |
          echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

  cleanup-previous-tags:
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - name: Delete existing tags and releases
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release list --limit 100 | awk '{print $1}' | while read -r tag; do
            echo "Deleting release: $tag"
            gh release delete "$tag" --yes || true
            echo "Deleting tag: $tag"
            git push origin --delete "$tag" || true
          done

  release:
    needs: [prepare-release, cleanup-previous-tags]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release_name:
          - SysAdmin-Tools
          - READMEs-Files-Package
          - ITSM-Templates-WKS
          - ITSM-Templates-SVR
          - GPOs-Templates
          - Core-ScriptLibrary
          - BlueTeam-Tools
          - AD-SSO-APIs-Integration
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set variables
        id: vars
        run: |
          echo "sha=${{ needs.prepare-release.outputs.sha }}" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "version_tag=${{ matrix.release_name }}-${{ steps.vars.outputs.date }}-${{ steps.vars.outputs.sha }}" >> $GITHUB_ENV

      - name: Create release zip
        run: |
          mkdir -p artifacts
          zip -r artifacts/${{ matrix.release_name }}.zip ${{ matrix.release_name }}

      - name: Generate SHA256 hash
        run: |
          sha256sum artifacts/${{ matrix.release_name }}.zip > artifacts/${{ matrix.release_name }}.zip.sha256

      - name: Upload release artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version_tag }}
          name: ${{ env.version_tag }}
          body_path: .github/release-notes/${{ matrix.release_name }}.md
          files: |
            artifacts/${{ matrix.release_name }}.zip
            artifacts/${{ matrix.release_name }}.zip.sha256
            CHANGELOG.md
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
