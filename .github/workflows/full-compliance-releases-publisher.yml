name: Build and Release Specialized Packages

on:
  workflow_dispatch:
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release_name:
          - BlueTeam-Tools
          - Core-ScriptLibrary
          - ITSM-Templates-SVR
          - ITSM-Templates-WKS
          - SysAdmin-Tools
          - GPOs-Templates
          - READMEs-Files-Package
          - All-Repository-Files

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip jq tree

      - name: Show folder structure (Level 2)
        run: tree -L 2

      - name: Prepare artifact folder
        run: rm -rf artifacts && mkdir artifacts

      - name: Run PSScriptAnalyzer and export report
        run: |
          pwsh -Command 'Invoke-ScriptAnalyzer -Path . -Recurse -Severity Warning,Error -ReportSummary | Out-File artifacts/PSScriptAnalyzerReport.txt -Encoding UTF8'

      - name: Package release - ${{ matrix.release_name }}
        env:
          RELEASE_NAME: ${{ matrix.release_name }}
        run: |
          case "$RELEASE_NAME" in
            BlueTeam-Tools)
              zip -r artifacts/$RELEASE_NAME.zip Windows-SysAdmin-ProSuite/BlueTeam-Tools
              ;;
            Core-ScriptLibrary)
              zip -r artifacts/$RELEASE_NAME.zip Windows-SysAdmin-ProSuite/Core-ScriptLibrary
              ;;
            ITSM-Templates-SVR)
              zip -r artifacts/$RELEASE_NAME.zip Windows-SysAdmin-ProSuite/ITSM-Templates-SVR
              ;;
            ITSM-Templates-WKS)
              zip -r artifacts/$RELEASE_NAME.zip Windows-SysAdmin-ProSuite/ITSM-Templates-WKS
              ;;
            SysAdmin-Tools)
              zip -r artifacts/$RELEASE_NAME.zip Windows-SysAdmin-ProSuite/SysAdmin-Tools
              ;;
            GPOs-Templates)
              mkdir -p GPOs-Templates
              cp -r Windows-SysAdmin-ProSuite/SysAdmin-Tools/GroupPolicyObjects-Templates/* GPOs-Templates/
              cp Windows-SysAdmin-ProSuite/SysAdmin-Tools/ActiveDirectory-Management/Export-n-Import-GPOsTool.ps1 GPOs-Templates/
              zip -r artifacts/$RELEASE_NAME.zip GPOs-Templates
              ;;
            READMEs-Files-Package)
              mkdir -p READMEs-Files-Package
              cp README.md READMEs-Files-Package/main-README.md
              find . -type f -iname "README.md" ! -path "./README.md" | while read -r file; do
                repo_dir=$(dirname "$file")
                repo_name=$(basename "$repo_dir")
                new_filename="${repo_name}-README.md"
                cp "$file" "READMEs-Files-Package/$new_filename"
              done
              zip -r artifacts/$RELEASE_NAME.zip READMEs-Files-Package
              ;;
            All-Repository-Files)
              zip -r artifacts/$RELEASE_NAME.zip Windows-SysAdmin-ProSuite
              ;;
          esac

      - name: Parse changelog for release notes
        id: changelog
        run: |
          notes=$(awk '/^## /{f=!f; next} f' CHANGELOG.md | sed '/^$/d' | head -n 30)
          echo "body<<EOF" >> $GITHUB_ENV
          echo "$notes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub release and upload zip
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ matrix.release_name }}
          name: ${{ matrix.release_name }}
          body: ${{ env.body }}
          draft: false
          prerelease: false
          files: artifacts/${{ matrix.release_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish .nupkg to GitHub Packages if exists
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GH_PAT_FOR_NUGET }}
        run: |
          if compgen -G "artifacts/*.nupkg" > /dev/null; then
            dotnet nuget push artifacts/*.nupkg \
              --api-key $NUGET_AUTH_TOKEN \
              --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
              --skip-duplicate
          else
            echo "No .nupkg found for ${{ matrix.release_name }}, skipping NuGet publish."
          fi

      - name: Upload PSScriptAnalyzer report
        uses: actions/upload-artifact@v4
        with:
          name: PSScriptAnalyzer-${{ matrix.release_name }}
          path: artifacts/PSScriptAnalyzerReport.txt
