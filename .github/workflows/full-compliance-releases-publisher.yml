name: Build and Release Specialized Packages

on:
  workflow_dispatch:
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        release_name:
          ["BlueTeam-Tools", "Core-ScriptLibrary", "ITSM-Templates-SVR",
           "ITSM-Templates-WKS", "SysAdmin-Tools", "GPOs-Templates",
           "READMEs-Files-Package", "All-Repository-Files"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'

      - name: Install Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y zip jq

      - name: Delete Previous Release and Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="${{ matrix.release_name }}"
          if gh release view "$tag" >/dev/null 2>&1; then
            gh release delete "$tag" -y
            git push --delete origin "$tag"
          fi

      - name: Run PSScriptAnalyzer
        run: |
          mkdir -p analysis-reports
          pwsh -c "Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser"
          pwsh -c "Invoke-ScriptAnalyzer -Path './${{ matrix.release_name }}' -Recurse | Out-File -FilePath 'analysis-reports/PSScriptAnalyzer.txt'"

      - name: Zip Artifacts
        run: |
          mkdir -p artifacts
          if [ -d "${{ matrix.release_name }}" ]; then
            zip -r "artifacts/${{ matrix.release_name }}.zip" "${{ matrix.release_name }}"
          else
            echo "Skipping zip. Folder not found: ${{ matrix.release_name }}"
          fi

      - name: Build NuGet Package (if .nuspec exists)
        run: |
          if compgen -G "${{ matrix.release_name }}/*.nuspec" > /dev/null; then
            find "${{ matrix.release_name }}" -name '*.nuspec' -exec dotnet nuget pack {} -OutputDirectory artifacts \;
          else
            echo "No .nuspec found for ${{ matrix.release_name }}, skipping NuGet pack."
          fi

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ matrix.release_name }}
          name: ${{ matrix.release_name }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload .zip Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/${{ matrix.release_name }}.zip
          asset_name: ${{ matrix.release_name }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload PSScriptAnalyzer Report
        uses: actions/upload-artifact@v4
        with:
          name: PSScriptAnalyzer-${{ matrix.release_name }}
          path: analysis-reports/PSScriptAnalyzer.txt

      - name: Push .nupkg to GitHub Packages
        if: ${{ secrets.GH_PAT_FOR_NUGET != '' }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GH_PAT_FOR_NUGET }}
        run: |
          if compgen -G "artifacts/*.nupkg" > /dev/null; then
            dotnet nuget push artifacts/*.nupkg \
              --api-key "$NUGET_AUTH_TOKEN" \
              --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
              --skip-duplicate
          else
            echo "No .nupkg found to push for ${{ matrix.release_name }}."
          fi
