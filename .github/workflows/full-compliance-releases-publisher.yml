name: Build and Release Packages

on:
  workflow_dispatch:
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        release_name: [
          "BlueTeam-Tools",
          "Core-ScriptLibrary",
          "ITSM-Templates-SVR",
          "ITSM-Templates-WKS",
          "SysAdmin-Tools",
          "GPOs-Templates",
          "READMEs-Files-Package",
          "All-Repository-Files"
        ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip jq gh dotnet-sdk-6.0

      - name: Configure GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh auth setup-git

      - name: Delete Existing Release and Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ matrix.release_name }}"
          if gh release view "$TAG" &>/dev/null; then
            echo "Deleting existing release $TAG..."
            gh release delete "$TAG" -y
            git push --delete origin "$TAG" || true
          else
            echo "No existing release for $TAG"
          fi

      - name: Create Artifacts Folder
        run: mkdir -p artifacts

      - name: Build and Package
        env:
          RELEASE_NAME: ${{ matrix.release_name }}
        run: |
          case "$RELEASE_NAME" in
            BlueTeam-Tools|Core-ScriptLibrary|ITSM-Templates-SVR|ITSM-Templates-WKS|SysAdmin-Tools)
              zip -r "artifacts/$RELEASE_NAME.zip" "Windows-SysAdmin-ProSuite/$RELEASE_NAME"
              ;;
            GPOs-Templates)
              mkdir -p GPOs-Templates
              cp -r Windows-SysAdmin-ProSuite/SysAdmin-Tools/GroupPolicyObjects-Templates/* GPOs-Templates/
              cp Windows-SysAdmin-ProSuite/SysAdmin-Tools/ActiveDirectory-Management/Export-n-Import-GPOsTool.ps1 GPOs-Templates/
              zip -r artifacts/GPOs-Templates.zip GPOs-Templates
              ;;
            READMEs-Files-Package)
              mkdir -p READMEs-Files-Package
              cp Windows-SysAdmin-ProSuite/README.md READMEs-Files-Package/main-README.md
              find Windows-SysAdmin-ProSuite -iname "README.md" ! -path "*/README.md" | while read -r file; do
                repo_dir=$(dirname "$file")
                repo_name=$(basename "$repo_dir")
                cp "$file" "READMEs-Files-Package/${repo_name}-README.md"
              done
              zip -r artifacts/READMEs-Files-Package.zip READMEs-Files-Package
              ;;
            All-Repository-Files)
              mkdir -p All-Repository-Files
              for dir in BlueTeam-Tools Core-ScriptLibrary ITSM-Templates-SVR ITSM-Templates-WKS SysAdmin-Tools; do
                cp -r "Windows-SysAdmin-ProSuite/$dir" All-Repository-Files/
              done
              cp Windows-SysAdmin-ProSuite/LICENSE All-Repository-Files/
              cp Windows-SysAdmin-ProSuite/README.md All-Repository-Files/
              zip -r artifacts/All-Repository-Files.zip All-Repository-Files
              ;;
          esac

      - name: Create GitHub Release and Upload Zip
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ matrix.release_name }}
          name: ${{ matrix.release_name }}
          body: Latest automated release for ${{ matrix.release_name }}.
          draft: false
          prerelease: false
          files: artifacts/${{ matrix.release_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish NuGet Package (if .nupkg exists)
        env:
          GH_PAT_FOR_NUGET: ${{ secrets.GH_PAT_FOR_NUGET }}
        run: |
          if compgen -G "artifacts/*.nupkg" > /dev/null; then
            echo "Found .nupkg, pushing to NuGet..."
            dotnet nuget push artifacts/*.nupkg \
              --api-key "$GH_PAT_FOR_NUGET" \
              --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
              --skip-duplicate
          else
            echo "No .nupkg found for ${{ matrix.release_name }}, skipping NuGet push."
          fi
