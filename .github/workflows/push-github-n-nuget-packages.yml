name: Publish NuGet Package

on:
  push:
    branches: [main]
  release:
    types: [published, prerelease]

permissions:
  contents: write
  packages: write

jobs:
  publish-nuget:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: üêû Start Debug Info
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "Checking for files:"
          ls -l
          ls -lR Core-ScriptLibrary BlueTeam-Tools SysAdmin-Tools ITSM-Templates-WKS ITSM-Templates-SVR || true

      - name: üì¶ Install Tools
        run: |
          echo "Waiting for dpkg frontend lock to be released..."
          while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
            echo "Lock held... waiting 5s"
            sleep 5
          done

          sudo apt-get update
          sudo apt-get install -y mono-complete xmlstarlet
          mono --version

          wget -O nuget.exe https://dist.nuget.org/win-x86-commandline/v6.11.0/nuget.exe
          chmod +x nuget.exe
          sudo mv nuget.exe /usr/local/bin/nuget
          mono /usr/local/bin/nuget help | head -n 1

      - name: üìÅ Prepare Package Files
        id: prepare
        run: |
          pkg="ITSMAndSysAdminTools"
          nuspec="$pkg.nuspec"
          mkdir -p "tmp-$pkg" nupkg-out

          for dir in Core-ScriptLibrary BlueTeam-Tools SysAdmin-Tools ITSM-Templates-WKS ITSM-Templates-SVR; do
            if [ -d "$dir" ]; then
              cp -r "$dir" "tmp-$pkg/"
            fi
          done

          cp "$nuspec" "tmp-$pkg/"
          cp README.md LICENSE icon.png "tmp-$pkg/" || true

          echo "skip=false" >> "$GITHUB_OUTPUT"

      - name: üß† Enrich Nuspec Metadata
        if: steps.prepare.outputs.skip != 'true'
        id: enrich
        run: |
          pkg="ITSMAndSysAdminTools"
          nuspec="tmp-$pkg/$pkg.nuspec"
          version=$(xmlstarlet sel -t -m "//metadata/version" -v . "$nuspec")
          echo "version=$version" >> "$GITHUB_OUTPUT"

          changelog=$(awk "/^## \\[$version\\]/,/^## \\[/" CHANGELOG.md | sed '1d;/^## \\[/d' || echo "No changelog found for version $version")
          changelog_sanitized=$(printf "%s" "$changelog" | sed ':a;N;$!ba;s/\n/\\n/g;s/\"/\\"/g')

          artifact_url="https://github.com/${{ github.repository }}/packages"
          browse_url="https://github.com/${{ github.repository }}/tree/${{ github.ref_name }}"
          download_links="\\n\\nüì¶ Download .nupkg: $artifact_url\\nüìÅ Browse files: $browse_url"
          full_notes="$changelog_sanitized$download_links"

          echo "notes=$full_notes" >> "$GITHUB_OUTPUT"

          xmlstarlet ed -L \
            -u "//metadata/releaseNotes" -v "$full_notes" \
            -u "//metadata/tags" -v "powershell itsm sysadmin security gpo automation enterprise activedirectory network wsus configuration sso ldap" \
            -u "//metadata/iconUrl" -v "icon.png" \
            -s "//metadata[not(repository)]" -t elem -n "repository" -v "" \
            -i "//metadata/repository" -t attr -n "type" -v "git" \
            -i "//metadata/repository" -t attr -n "url" -v "https://github.com/${{ github.repository }}" \
            -i "//metadata/repository" -t attr -n "branch" -v "${{ github.ref_name }}" \
            -i "//metadata/repository" -t attr -n "commit" -v "${{ github.sha }}" \
            "$nuspec"

      - name: üì¶ Pack NuGet Package
        if: steps.prepare.outputs.skip != 'true'
        run: |
          pkg="ITSMAndSysAdminTools"
          cd "tmp-$pkg"
          mono /usr/local/bin/nuget pack "$pkg.nuspec" \
            -OutputDirectory ../nupkg-out \
            -Symbols -SymbolPackageFormat snupkg \
            -NonInteractive

      - name: üöÄ Push to GitHub Packages
        if: steps.prepare.outputs.skip != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in nupkg-out/*.nupkg; do
            mono /usr/local/bin/nuget push "$file" \
              -Source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
              -ApiKey "$GITHUB_TOKEN" -SkipDuplicate -NonInteractive
          done

      - name: üöÄ Push to NuGet.org
        if: steps.prepare.outputs.skip != 'true'
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          for file in nupkg-out/*.nupkg; do
            mono /usr/local/bin/nuget push "$file" \
              -Source "https://api.nuget.org/v3/index.json" \
              -ApiKey "$NUGET_API_KEY" -SkipDuplicate -NonInteractive
          done

      - name: üè∑Ô∏è Create Git Tag
        if: steps.prepare.outputs.skip != 'true'
        run: |
          tag="ITSMAndSysAdminTools-v${{ steps.enrich.outputs.version }}"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag "$tag"
          git push origin "$tag"

      - name: üßπ Clean Up
        if: always()
        run: rm -rf tmp-ITSMAndSysAdminTools nupkg-out || true
