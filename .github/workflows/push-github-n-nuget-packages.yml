name: Publish NuGet Package

on:
  push:
    branches: [main]
  release:
    types: [published, prerelease]

permissions:
  contents: write
  packages: write

jobs:
  publish-nuget:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: üß™ Start Debug Info
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Event: ${{ github.event_name }}"

      - name: üì¶ Install Tools
        run: |
          sudo lsof /var/lib/dpkg/lock-frontend || true
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y mono-complete xmlstarlet
          wget -O nuget.exe https://dist.nuget.org/win-x86-commandline/v6.11.0/nuget.exe
          chmod +x nuget.exe
          sudo mv nuget.exe /usr/local/bin/nuget

      - name: üìÅ Prepare Package Files
        id: prepare
        run: |
          pkg="ITSMAndSysAdminTools"
          nuspec="$pkg.nuspec"
          mkdir -p "tmp-$pkg"
          cp "$nuspec" "tmp-$pkg/$pkg.nuspec"

          for dir in Core-ScriptLibrary BlueTeam-Tools SysAdmin-Tools ITSM-Templates-WKS ITSM-Templates-SVR; do
            if [ -d "$dir" ]; then
              cp -r "$dir" "tmp-$pkg/"
            fi
          done

          [ -f "README.md" ] && cp "README.md" "tmp-$pkg/$pkg-README.md"
          [ -f "icon.png" ] && cp "icon.png" "tmp-$pkg/icon.png"
          [ -f "LICENSE" ] && cp "LICENSE" "tmp-$pkg/LICENSE"

          echo "skip=false" >> "$GITHUB_OUTPUT"

      - name: üß† Enrich Nuspec Metadata
        if: steps.prepare.outputs.skip != 'true'
        id: enrich
        run: |
          pkg="ITSMAndSysAdminTools"
          nuspec="tmp-$pkg/$pkg.nuspec"
          version=$(xmlstarlet sel -t -m "//metadata/version" -v . "$nuspec")
          echo "version=$version" >> "$GITHUB_OUTPUT"

          changelog=$(awk "/^## \\[$version\\]/,/^## \\[/" CHANGELOG.md | sed '1d;/^## \\[/d')
          [ -z "$changelog" ] && changelog="No changelog found for version $version"

          artifact_url="https://github.com/${{ github.repository }}/packages"
          browse_url="https://github.com/${{ github.repository }}/tree/${{ github.ref_name }}"
          download_links="\n\nüì¶ Download .nupkg: $artifact_url\nüìÅ Browse files: $browse_url"
          full_notes="$changelog$download_links"

          full_notes_escaped=$(echo "$full_notes" | sed \
            -e 's/&/\&amp;/g' \
            -e 's/</\&lt;/g' \
            -e 's/>/\&gt;/g' \
            -e 's/"/\&quot;/g' \
            -e "s/'/\&apos;/g")

          echo "notes=$full_notes_escaped" >> "$GITHUB_OUTPUT"

          xmlstarlet ed -L \
            -u "//metadata/releaseNotes" -v "$full_notes_escaped" \
            -u "//metadata/tags" -v "powershell itsm sysadmin security gpo automation enterprise activedirectory network wsus configuration sso ldap" \
            -u "//metadata/iconUrl" -v "icon.png" \
            -s "//metadata[not(repository)]" -t elem -n "repository" -v "" \
            -i "//metadata/repository" -t attr -n "type" -v "git" \
            -i "//metadata/repository" -t attr -n "url" -v "https://github.com/${{ github.repository }}" \
            -i "//metadata/repository" -t attr -n "branch" -v "${{ github.ref_name }}" \
            -i "//metadata/repository" -t attr -n "commit" -v "${{ github.sha }}" \
            "$nuspec"

      - name: üì¶ Pack NuGet Package
        if: steps.prepare.outputs.skip != 'true'
        run: |
          pkg="ITSMAndSysAdminTools"
          cd "tmp-$pkg"
          mono /usr/local/bin/nuget pack "$pkg.nuspec" -OutputDirectory ../nupkg-out -Symbols -SymbolPackageFormat snupkg

      - name: üöÄ Push to GitHub Packages
        if: steps.prepare.outputs.skip != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for pkg_file in nupkg-out/*.nupkg; do
            mono /usr/local/bin/nuget push "$pkg_file" \
              -Source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
              -ApiKey "$GITHUB_TOKEN" -SkipDuplicate
          done

      - name: üöÄ Push to NuGet.org
        if: steps.prepare.outputs.skip != 'true'
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          for pkg_file in nupkg-out/*.nupkg; do
            mono /usr/local/bin/nuget push "$pkg_file" \
              -Source "https://api.nuget.org/v3/index.json" \
              -ApiKey "$NUGET_API_KEY" -SkipDuplicate
          done

      - name: üè∑Ô∏è Create Git Tag
        if: steps.prepare.outputs.skip != 'true'
        run: |
          tag="ITSMAndSysAdminTools-v${{ steps.enrich.outputs.version }}"
          if ! git tag --list | grep -q "^$tag$"; then
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag "$tag"
            git push origin "$tag"
          fi

      - name: üßπ Clean Up
        if: always()
        run: rm -rf "tmp-ITSMAndSysAdminTools" nupkg-out
